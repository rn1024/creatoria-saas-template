{{#if (includes features 'database')}}
import { Entity, Column, ManyToMany, JoinTable, ManyToOne } from 'typeorm';
import { BaseEntity } from './base.entity';
import { RoleDO } from './role.entity';
import { DeptDO } from './dept.entity';

@Entity('users')
export class UserDO extends BaseEntity {
  @Column({ unique: true })
  username: string;

  @Column()
  password: string;

  @Column({ unique: true })
  email: string;

  @Column({ nullable: true })
  nickname?: string;

  @Column({ nullable: true })
  avatar?: string;

  @Column({ nullable: true })
  phone?: string;

  @Column({ default: true })
  isActive: boolean;

  @Column({ nullable: true })
  sex?: number;

  @Column({ nullable: true })
  mobile?: string;

  @Column({ nullable: true })
  loginIp?: string;

  @Column({ nullable: true })
  loginDate?: Date;

  @ManyToMany(() => RoleDO, role => role.users)
  @JoinTable({
    name: 'user_roles',
    joinColumn: { name: 'user_id' },
    inverseJoinColumn: { name: 'role_id' }
  })
  roles: RoleDO[];

  @ManyToOne(() => DeptDO, dept => dept.users)
  dept: DeptDO;

  @Column({ nullable: true })
  deptId?: number;
}
{{/if}}